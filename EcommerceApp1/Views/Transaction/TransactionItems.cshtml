@model TransactionItemsViewModel

@{
    Layout = null;
}

<link rel="stylesheet" href="~/css/general.css" />
<link rel="stylesheet" href="~/css/header.css" />
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/shoppingCart.css" />

<link href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

<body style="background-color: rgb(230,230,230)">
    <header class="header">
        <partial name="_HeaderPartial" />
    </header>

    <div class="products-and-order-container">
        <div class="cart-products-container">
            @foreach (var item in Model.Transactionitems)
            {
                <div class="cart-product js-cart-product-@item.ProductID">
                    <img src="~/Img/@item.Product.Image" class="cart-product-image">
                    <div class="cart-product-info">
                        <p class="cart-product-name">@item.Product.Name</p>
                        <div class="cart-product-rating">
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= @item.Product.AverageRating)
                                {
                                    <i class="fa-solid fa-star fa-sm" style="color: #29db47;"></i>
                                }
                                else if (@item.Product.AverageRating >= (i - 1) + 0.5 && @item.Product.AverageRating < i)
                                {
                                    <i class="fa-solid fa-star-half-stroke fa-sm" style="color: #29db47;"></i>
                                }
                                else
                                {
                                    <i class="fa-regular fa-star fa-sm"></i>
                                }
                            }
                        </div>
                    </div>

                    <div>
                        <p style="margin-bottom: 10px;">Delivery Chosen:</p>
                        <p>@item.ShippingOption</p>
                    </div>

                    <div class="item-quantity-and-price">
                        <div class="quantity-container">
                        <p style="margin-bottom: 5px;">Quantity Bought: @item.Quantity</p>
                        </div>

                        <div class="prices-container">
                            @{
                                double productTotalPrice = @item.Product.Price * @item.Quantity;
                                string formattedTotalPrice = productTotalPrice.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture);
                                double productPrice = item.Product.Price;
                                string formattedPrice = productPrice.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture);
                            }
                            <span class="cart-product-price">$@formattedPrice each</span>
                        </div>
                        <span class="cart-product-total-price ">Total: $<span class="product-total js-product-total-@item.ProductID">@formattedTotalPrice</span></span>
                        @if (!Model.HasRequestedRefund(item.ID))
                        {
                            <div>
                                <button id="refund-button" class="btn btn-danger">Refund Item</button>
                            </div>
                            <div id="refund-reason-select" style="display: none;">

                                <form asp-controller="Refund" asp-action="Create">
                                    <input type="hidden" value="@item.TransactionID" asp-for="@Model.Refund.TransactionID" />
                                    <input type="hidden" value="@item.ProductID" asp-for="@Model.Refund.ProductID" />
                                    <input type="hidden" value="@item.ID" asp-for="@Model.Refund.TransactionItemID" />
                                    <p>Select a reason for your refund</p>
                                    <select asp-for="@Model.Refund.Reason" id="reasonSelect">
                                        @{var refundReasons = RefundReasons.Reasons;}
                                        @for (int i = 0; i < refundReasons.Count(); i++)
                                        {
                                            <option value="@refundReasons[i]">@refundReasons[i]</option>
                                        }
                                    </select>

                                    <div id="customReasonInput" class="form-row" style="display:none;">
                                            <textarea style="width: 100%; margin-top: 15px; padding: 15px;" type="text" asp-for="@Model.Refund.Reason" placeholder="Enter your custom reason"></textarea>
                                    </div>
                                    <div>
                                        <button style="margin-top: 15px;" type="submit" class="btn btn-primary" onclick="submitForm()">Request Refund</button>
                                    </div>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
        <div class="order-summary-container">
            <div class="order-summary-info">
                <p class="order-summary">Order Summary</p>
                <div class="summary-row">
                    <div class="summary-column">
                        @{
                            string itemCount = (Model.TransactionQuantityBought > 1) ? "items" : "item";
                        }
                        <p>Subtotal (@Model.TransactionQuantityBought @itemCount):</p>
                        <p class="shipping-handling">Shipping & Handling:</p>
                        <p class="estimated-tax">Estimated Tax:</p>
                    </div>
                    <div class="summary-column">
                        <p>$<span class="js-subtotal-price js-summary-price"></span></p>
                        @{
                            string shippingTotalPrice = Model.Transactionitems.Sum(x => x.ShippingCost).ToString("0.00", System.Globalization.CultureInfo.InvariantCulture);
                        }
                        <p>$@shippingTotalPrice</p>
                        <p>$<span class="tax-cost js-summary-price"></span></p>
                    </div>
                </div>
                <hr class="summary-hr">
                <div class="js-order-total-before-coupon" style="position: relative"></div>
                <div class="summary-row">
                    <p class="order-total">Order Total:</p>
                    <p style="font-size: 18px;"><span class="order-total-price">@Model.TransactionTotal</span></p>
                </div>
            </div>

        </div>
    </div>
    <script src="~/js/shoppingCart.js"></script>
    <script src="~/js/transaction-items.js"></script>
    <script src="https://kit.fontawesome.com/8da1ba04bb.js" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</body>
